version: "3"
services:
  api:
    image: rest-api-server-v1
    container_name: api
    restart: unless-stopped
    ports:
      - "8080:8080"
    networks:
      - rest-api
    environment:
      NODE_ENV: production
      PORT: 8080
    volumes:
      - .:/usr/src/app
      - /app/node_modules/
  mongo:
    container_name: mongo
    image: 'mongo:4.4-bionic'
    expose:
      - 27017
    command: ["--logpath","/var/log/mongodb/mongo.log"]
    networks:
      - rest-api
    volumes:
      - mongo-data:/data/db 
  redis-server:
    container_name: redis
    hostname: redis
    image: 'redis:6.2-alpine'
    command:
      - /usr/local/bin/redis-server 
      - /usr/local/etc/redis/redis.conf
    restart : unless-stopped
    expose:
      - 6379
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    volumes:
      - ../redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - rest-api
  nginx:
    container_name: nginx-proxy
    image: nginx:1.21.5-alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    networks:
      - rest-api
    volumes:
      - ./default.conf:/etc/nginx/conf.d/default.conf
      - ./dhparam:/etc/nginx/dhparam
      - ./certbot/conf:/etc/nginx/ssl
      - ./certbot/data:/usr/share/html/letsencrypt
  certbot:
    image: certbot/certbot
    command: certonly --webroot --webroot-path=/usr/share/nginx/html/letsencrypt --email sz.fanel@gmail.com --agree-tos --no-eff-email -d express-restapi.xyz -d www.express-restapi.xyz
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/logs:/var/log/letsencrypt
      - ./certbot/data:/usr/share/nginx/html/letsencrypt
networks:
  rest-api:
    driver: bridge
volumes:
  mongo-data:
    driver: local
